#!/bin/bash

function xdebug {
    PHP_VERSION="$(php -r "\$v=explode('.', PHP_VERSION ); echo implode('.', array_splice(\$v, 0, -1));")"
    CONFIG_PATH="$(brew --prefix)/etc/php/${PHP_VERSION}/conf.d"
    CONFIG_FILE="${CONFIG_PATH}/ext-xdebug.ini"
    CONFIG_FILE_DISABLED="${CONFIG_PATH}/ext-xdebug.ini.disabled"

    if test -f "$CONFIG_FILE"; then
        mv "${CONFIG_FILE}" "${CONFIG_FILE_DISABLED}"
        echo -e "\nXdebug disabled.\n"
    elif test -f "$CONFIG_FILE_DISABLED"; then
        mv "${CONFIG_FILE_DISABLED}" "${CONFIG_FILE}"
        echo -e "\nXdebug enabled.\n"
    else
        echo -e "\nError: Can't find any Xdebug config file at ${CONFIG_FILE}."
        return 1
        exit
    fi

    valet restart php
}

function createDb {
    DB_NAME=$(awk -F "=" '/DB_DATABASE/ {print $2}' .env)
    docker exec TO--mysql--8.0.23--3306 mysql -e "CREATE DATABASE ${DB_NAME} /*\!40100 DEFAULT CHARACTER SET utf8 */;"
}

function arm {
    arch -x86_64 $@
}

function lup {
    composer install
    cp .env.example .env
    php artisan key:generate
    perl -pi -e "s/(?'var'DB_DATABASE=)(.*)/$+{var}capybara/g" ".env"
    php artisan migrate:fresh --seed
    rm ~/Sites/capybara
    ln -s $PWD ~/Sites/capybara
    phpunit
    subl . 
}
