#!/bin/bash

function xdebug {
    PHP_VERSION="$(php -r "\$v=explode('.', PHP_VERSION ); echo implode('.', array_splice(\$v, 0, -1));")"
    CONFIG_PATH="$(brew --prefix)/etc/php/${PHP_VERSION}/conf.d"
    CONFIG_FILE="${CONFIG_PATH}/ext-xdebug.ini"
    CONFIG_FILE_DISABLED="${CONFIG_PATH}/ext-xdebug.ini.disabled"

    if test -f "$CONFIG_FILE"; then
        mv "${CONFIG_FILE}" "${CONFIG_FILE_DISABLED}"
        echo -e "\nXdebug disabled.\n"
    elif test -f "$CONFIG_FILE_DISABLED"; then
        mv "${CONFIG_FILE_DISABLED}" "${CONFIG_FILE}"
        echo -e "\nXdebug enabled.\n"
    else
        echo -e "\nError: Can't find any Xdebug config file at ${CONFIG_FILE}."
        return 1
        exit
    fi

    valet restart php
}

function dockerCreateDb {
    DB_NAME=$(awk -F "=" '/DB_DATABASE/ {print $2}' .env)
    docker exec TO--mysql--8.0.23--3306 mysql -e "CREATE DATABASE ${DB_NAME} /*\!40100 DEFAULT CHARACTER SET utf8 */;"
}

function createDb {
    DB_NAME=$(awk -F "=" '/DB_DATABASE/ {print $2}' .env)
    mysql -uroot -e "CREATE DATABASE ${DB_NAME} /*\!40100 DEFAULT CHARACTER SET utf8 */;"
}

function arm {
    arch -x86_64 $@
}

function ip {
    if [[ $# -eq 0 ]] ; then
        echo 'Please provide the URL to look up.'
        return
    fi

    echo `dig +short $1 | awk '{ print ; exit }'`
}

function sshname {
    if [[ $# -eq 0 ]] ; then
        echo 'Please provide the URL to look up.'
        return
    fi

    IP=`ip $1`
    FOUNDHOST=`grep -B 1 $IP ~/.ssh/config | head -n 1 | awk '{print $2;}'`

    echo $FOUNDHOST
}
